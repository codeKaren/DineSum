package com.a0xffffffff.dinesum;

import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.ChildEventListener;
import com.google.firebase.database.ValueEventListener;

public class FirebaseManager {

    private FirebaseDatabase mFirebaseDatabase;
    private DatabaseReference mUserDatabase;
    private DatabaseReference mRequestDatabase;

    public FirebaseManager() {
        mFirebaseDatabase = FirebaseDatabase.getInstance();
        mUserDatabase = mFirebaseDatabase.getReference("users");
        mRequestDatabase = mFirebaseDatabase.getReference("requests");
    }

    /**
     * Write a request object to database
     * @param  Request request object to be written
     * @return boolean true if write succeeded
     */
    public boolean writeRequest(Request request) {
        String key = mRequestDatabase.push().getKey();
        // set the request ID to the unique key generated by Firebase
        request.setRequestID(key);
        mRequestDatabase.child(key).setValue(request);
        // wrote successfully to database
        return true;
        // TODO: error handling
    }

    /**
     * Fetch request objects from database for all requests a user has made
     * @param  User      requester
     * @return Request[] array of request objects
     */
    public static Request[] getRequesterRequests(User requester) {

        // TODO

        return new Request[0];
    }

    /**
     * Fetch request objects from database for all requests a user has completed
     * @param  User      reserver
     * @return Request[] array of request objects
     */
    public static Request[] getReserverRequests(User reserver) {

        // TODO

        return new Request[0];
    }

    /**
     * Fetch request objects from database for requests near the user
     * @param  String    location
     * @return Request[] array of request objects
     */
    // TODO: change the type of param (String is just placeholder)
    public static Request[] getRequesterRequests(String location) {

        // TODO

        return new Request[0];
    }
}
